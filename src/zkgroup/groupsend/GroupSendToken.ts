import ReactNativeLibsignalClientModule from '../../ReactNativeLibsignalClientModule';
import type GroupSendEndorsementsResponse from './GroupSendEndorsementsResponse';
import GroupSendFullToken from './GroupSendFullToken';

/**
 * A minimal cacheable representation of an endorsement.
 *
 * This contains the minimal information needed to represent this specific endorsement; it must be
 * converted to a {@link GroupSendFullToken} before sending to the chat server. (It is valid to do
 * this immediately; it just uses up extra space.)
 *
 * Generated by {@link GroupSendEndorsement#toToken}.
 */
export default class GroupSendToken {
  readonly serialized: Uint8Array;

  constructor(contents: Uint8Array) {
    this.serialized = contents;
  }

  /**
   * Converts this token to a "full token", which can be sent to the chat server as authentication.
   *
   * {@code expiration} must be the same expiration that was in the original
   * {@link GroupSendEndorsementsResponse}, or the resulting token will fail to verify.
   */
  toFullToken(expiration: Date): GroupSendFullToken {
    return new GroupSendFullToken(
      new Uint8Array(
        ReactNativeLibsignalClientModule.groupSendTokenToFullToken(
          this.serialized,
          Math.floor(expiration.getTime() / 1000)
        )
      )
    );
  }
}
